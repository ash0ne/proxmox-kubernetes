- hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
          
    - name: Install required packages
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
    
    - name: modprobe
      shell: |
        modprobe overlay
        modprobe br_netfilter

    - name: create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"

    - name: add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
          overlay
          br_netfilter

    - name: set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"

    - name: add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: apply new settings
      command: sysctl --system

    # containerd.io >1.6 as it is needed for kube 1.27
    - name: add docker apt gpg key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: get OS release name
      command: "lsb_release -cs"
      changed_when: false
      register: lsb_rel

    - name: add docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ lsb_rel.stdout }} stable
        state: present

    - name: install containerd >1.6 from docker repository
      apt:
        update_cache: yes
        name: containerd.io

    - name: configure containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
        systemctl restart containerd

    - name: Ensure /etc/apt/keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: add Kubernetes apt-key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'
        force: true

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        state: present
        update_cache: yes

    - name: install kubernetes
      apt:
        update_cache: yes
        pkg:
          - kubelet
          - kubeadm
          - kubectl

    - name: exclude kube components from apt upgrades
      shell: |
        apt-mark hold kubelet kubeadm kubectl containerd

    - name: enable containerd systemd service
      systemd:
        state: started
        name: containerd.service
        enabled: yes
        daemon_reload: yes

    - name: enable kubelet systemd service
      systemd:
        state: started
        name: kubelet.service
        enabled: yes
        daemon_reload: yes

    - name: reboot to apply swap disable
      reboot:
        reboot_timeout: 180
